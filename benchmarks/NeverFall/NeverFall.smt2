(declare-fun LB1 () Bool)
(declare-fun UB1 () Bool)
(declare-fun amt1 () Real)
(declare-fun LB2 () Bool)
(declare-fun UB2 () Bool)
(declare-fun amt2 () Real)
(declare-fun LB3 () Bool)
(declare-fun UB3 () Bool)
(declare-fun amt3 () Real)
(declare-fun LB4 () Bool)
(declare-fun UB4 () Bool)
(declare-fun amt4 () Real)
(declare-fun LB5 () Bool)
(declare-fun UB5 () Bool)
(declare-fun amt5 () Real)
(declare-fun LB6 () Bool)
(declare-fun UB6 () Bool)
(declare-fun |usdt.balanceOf(owner)1| () Real)
(declare-fun LB14 () Bool)
(declare-fun UB14 () Bool)
(declare-fun |usdt.balanceOf(attacker)1| () Real)
(declare-fun LB15 () Bool)
(declare-fun UB15 () Bool)
(declare-fun |usdt.balanceOf(pair)2| () Real)
(declare-fun LB16 () Bool)
(declare-fun UB16 () Bool)
(declare-fun |neverFall.balanceOf(attacker)2| () Real)
(declare-fun LB17 () Bool)
(declare-fun UB17 () Bool)
(declare-fun |neverFall.balanceOf(neverFall)2| () Real)
(declare-fun LB18 () Bool)
(declare-fun UB18 () Bool)
(declare-fun |usdt.balanceOf(attacker)2| () Real)
(declare-fun LB19 () Bool)
(declare-fun UB19 () Bool)
(declare-fun |neverFall.balanceOf(owner)3| () Real)
(declare-fun LB20 () Bool)
(declare-fun UB20 () Bool)
(declare-fun |usdt.balanceOf(pair)3| () Real)
(declare-fun LB21 () Bool)
(declare-fun UB21 () Bool)
(declare-fun |usdt.balanceOf(attacker)3| () Real)
(declare-fun LB22 () Bool)
(declare-fun UB22 () Bool)
(declare-fun |neverFall.balanceOf(pair)3| () Real)
(declare-fun LB23 () Bool)
(declare-fun UB23 () Bool)
(declare-fun |usdt.balanceOf(pair)4| () Real)
(declare-fun LB24 () Bool)
(declare-fun UB24 () Bool)
(declare-fun |neverFall.balanceOf(attacker)4| () Real)
(declare-fun LB25 () Bool)
(declare-fun UB25 () Bool)
(declare-fun |usdt.balanceOf(attacker)4| () Real)
(declare-fun LB26 () Bool)
(declare-fun UB26 () Bool)
(declare-fun |neverFall.balanceOf(pair)4| () Real)
(declare-fun LB27 () Bool)
(declare-fun UB27 () Bool)
(declare-fun |usdt.balanceOf(owner)5| () Real)
(declare-fun LB28 () Bool)
(declare-fun UB28 () Bool)
(declare-fun |usdt.balanceOf(attacker)5| () Real)
(declare-fun LB29 () Bool)
(declare-fun UB29 () Bool)
(declare-fun Step0_0 () Bool)
(declare-fun Step0_1 () Bool)
(declare-fun neverFallAmount1 () Real)
(declare-fun LB30 () Bool)
(declare-fun UB30 () Bool)
(declare-fun Step1_0 () Bool)
(declare-fun Step1_1 () Bool)
(declare-fun Step1_2 () Bool)
(declare-fun Step1_3 () Bool)
(declare-fun initSupply1 () Real)
(declare-fun LB31 () Bool)
(declare-fun UB31 () Bool)
(declare-fun Step1_4 () Bool)
(declare-fun Step1_5 () Bool)
(declare-fun Step1_6 () Bool)
(declare-fun Step2_0 () Bool)
(declare-fun Step2_1 () Bool)
(declare-fun Step2_2 () Bool)
(declare-fun Step2_3 () Bool)
(declare-fun amtOutMax2 () Real)
(declare-fun LB32 () Bool)
(declare-fun UB32 () Bool)
(declare-fun Step2_4 () Bool)
(declare-fun amountInWithFee2 () Real)
(declare-fun LB33 () Bool)
(declare-fun UB33 () Bool)
(declare-fun Step2_5 () Bool)
(declare-fun numeratorSuf2 () Real)
(declare-fun LB34 () Bool)
(declare-fun UB34 () Bool)
(declare-fun Step2_6 () Bool)
(declare-fun denominator2 () Real)
(declare-fun LB35 () Bool)
(declare-fun UB35 () Bool)
(declare-fun Step2_7 () Bool)
(declare-fun Step2_8 () Bool)
(declare-fun Step3_0 () Bool)
(declare-fun Step3_1 () Bool)
(declare-fun usdtAmount3 () Real)
(declare-fun LB36 () Bool)
(declare-fun UB36 () Bool)
(declare-fun Step3_2 () Bool)
(declare-fun Step3_3 () Bool)
(declare-fun Step3_4 () Bool)
(declare-fun Step3_5 () Bool)
(declare-fun Step3_6 () Bool)
(declare-fun Step4_0 () Bool)
(declare-fun Step4_1 () Bool)
(declare-fun Step4_2 () Bool)
(declare-fun AttackGoal () Bool)
(assert (=> LB1 (>= amt0 0.0)))
(assert (=> UB1 (<= amt0 340282366920938463463374607431768211455.0)))
(assert (=> LB2 (>= amt1 0.0)))
(assert (=> UB2 (<= amt1 340282366920938463463374607431768211455.0)))
(assert (=> LB3 (>= amt2 0.0)))
(assert (=> UB3 (<= amt2 340282366920938463463374607431768211455.0)))
(assert (=> LB4 (>= amt3 0.0)))
(assert (=> UB4 (<= amt3 340282366920938463463374607431768211455.0)))
(assert (=> LB5 (>= amt4 0.0)))
(assert (=> UB5 (<= amt4 340282366920938463463374607431768211455.0)))
(assert (=> LB6 (>= amt5 0.0)))
(assert (=> UB6 (<= amt5 340282366920938463463374607431768211455.0)))
(assert (=> LB14 (>= |usdt.balanceOf(owner)1| 0.0)))
(assert (=> UB14
    (<= |usdt.balanceOf(owner)1| 340282366920938463463374607431768211455.0)))
(assert (=> LB15 (>= |usdt.balanceOf(attacker)1| 0.0)))
(assert (=> UB15
    (<= |usdt.balanceOf(attacker)1| 340282366920938463463374607431768211455.0)))
(assert (=> LB16 (>= |usdt.balanceOf(pair)2| 0.0)))
(assert (=> UB16 (<= |usdt.balanceOf(pair)2| 340282366920938463463374607431768211455.0)))
(assert (=> LB17 (>= |neverFall.balanceOf(attacker)2| 0.0)))
(assert (=> UB17
    (<= |neverFall.balanceOf(attacker)2|
        340282366920938463463374607431768211455.0)))
(assert (=> LB18 (>= |neverFall.balanceOf(neverFall)2| 0.0)))
(assert (=> UB18
    (<= |neverFall.balanceOf(neverFall)2|
        340282366920938463463374607431768211455.0)))
(assert (=> LB19 (>= |usdt.balanceOf(attacker)2| 0.0)))
(assert (=> UB19
    (<= |usdt.balanceOf(attacker)2| 340282366920938463463374607431768211455.0)))
(assert (=> LB20 (>= |neverFall.balanceOf(owner)3| 0.0)))
(assert (=> UB20
    (<= |neverFall.balanceOf(owner)3| 340282366920938463463374607431768211455.0)))
(assert (=> LB21 (>= |usdt.balanceOf(pair)3| 0.0)))
(assert (=> UB21 (<= |usdt.balanceOf(pair)3| 340282366920938463463374607431768211455.0)))
(assert (=> LB22 (>= |usdt.balanceOf(attacker)3| 0.0)))
(assert (=> UB22
    (<= |usdt.balanceOf(attacker)3| 340282366920938463463374607431768211455.0)))
(assert (=> LB23 (>= |neverFall.balanceOf(pair)3| 0.0)))
(assert (=> UB23
    (<= |neverFall.balanceOf(pair)3| 340282366920938463463374607431768211455.0)))
(assert (=> LB24 (>= |usdt.balanceOf(pair)4| 0.0)))
(assert (=> UB24 (<= |usdt.balanceOf(pair)4| 340282366920938463463374607431768211455.0)))
(assert (=> LB25 (>= |neverFall.balanceOf(attacker)4| 0.0)))
(assert (=> UB25
    (<= |neverFall.balanceOf(attacker)4|
        340282366920938463463374607431768211455.0)))
(assert (=> LB26 (>= |usdt.balanceOf(attacker)4| 0.0)))
(assert (=> UB26
    (<= |usdt.balanceOf(attacker)4| 340282366920938463463374607431768211455.0)))
(assert (=> LB27 (>= |neverFall.balanceOf(pair)4| 0.0)))
(assert (=> UB27
    (<= |neverFall.balanceOf(pair)4| 340282366920938463463374607431768211455.0)))
(assert (=> LB28 (>= |usdt.balanceOf(owner)5| 0.0)))
(assert (=> UB28
    (<= |usdt.balanceOf(owner)5| 340282366920938463463374607431768211455.0)))
(assert (=> LB29 (>= |usdt.balanceOf(attacker)5| 0.0)))
(assert (=> UB29
    (<= |usdt.balanceOf(attacker)5| 340282366920938463463374607431768211455.0)))
(assert (=> Step0_0
    (= |usdt.balanceOf(owner)1|
       (- (/ 1184370034720013.0 40000000.0) (* amt0 1.0)))))
(assert (=> Step0_1 (= |usdt.balanceOf(attacker)1| (+ 0.0 (* amt0 1.0)))))
(assert (=> LB30 (>= neverFallAmount1 0.0)))
(assert (=> UB30 (<= neverFallAmount1 340282366920938463463374607431768211455.0)))
(assert (=> Step1_0
    (= |neverFall.balanceOf(neverFall)2|
       (- (/ 9953730362164221.0 50000.0) (* neverFallAmount1 1.0)))))
(assert (=> Step1_1
    (= |neverFall.balanceOf(attacker)2| (+ 0.0 (* neverFallAmount1 1.0)))))
(assert (=> Step1_2
    (= |usdt.balanceOf(attacker)2| (- |usdt.balanceOf(attacker)1| (* amt1 1.0)))))
(assert (=> Step1_3
    (= |usdt.balanceOf(pair)2|
       (+ (/ 3907491319996759.0 10000000000.0) (* amt1 (/ 49.0 50.0))))))
(assert (=> LB31 (>= initSupply1 0.0)))
(assert (=> UB31 (<= initSupply1 340282366920938463463374607431768211455.0)))
(assert (=> Step1_4 (= initSupply1 99900000000000000000000.0)))
(assert (=> Step1_5 (< amt1 |usdt.balanceOf(attacker)1|)))
(assert (=> Step1_6
    (= neverFallAmount1
       (/ (* amt1 (/ 8868325113321507.0 50000000.0))
          (/ 3907491319996759.0 10000000000.0)))))
(assert (=> Step2_0
    (= |usdt.balanceOf(attacker)3| (- |usdt.balanceOf(attacker)2| (* amt2 1.0)))))
(assert (=> Step2_1
    (= |usdt.balanceOf(pair)3| (+ |usdt.balanceOf(pair)2| (* amt2 1.0)))))
(assert (=> Step2_2
    (= |neverFall.balanceOf(pair)3|
       (- (/ 8868325113321507.0 50000000.0) (* amt3 1.0)))))
(assert (=> Step2_3
    (= |neverFall.balanceOf(owner)3| (+ 99899999999800750000000.0 (* amt3 1.0)))))
(assert (=> LB32 (>= amtOutMax2 0.0)))
(assert (=> UB32 (<= amtOutMax2 340282366920938463463374607431768211455.0)))
(assert (=> Step2_4 (< amt3 amtOutMax2)))
(assert (=> LB33 (>= amountInWithFee2 0.0)))
(assert (=> UB33 (<= amountInWithFee2 340282366920938463463374607431768211455.0)))
(assert (=> Step2_5 (= amountInWithFee2 (* amt2 997.0))))
(assert (=> LB34 (>= numeratorSuf2 0.0)))
(assert (=> UB34 (<= numeratorSuf2 340282366920938463463374607431768211455.0)))
(assert (=> Step2_6
    (= numeratorSuf2 (* amountInWithFee2 (/ 8868325113321507.0 50000000.0)))))
(assert (=> LB35 (>= denominator2 0.0)))
(assert (=> UB35 (<= denominator2 340282366920938463463374607431768211455.0)))
(assert (=> Step2_7
    (= denominator2 (+ (* |usdt.balanceOf(pair)2| 1000.0) amountInWithFee2))))
(assert (=> Step2_8 (= (* amtOutMax2 denominator2) numeratorSuf2)))
(assert (=> Step3_0
    (= |neverFall.balanceOf(attacker)4|
       (- |neverFall.balanceOf(attacker)2| (* amt4 1.0)))))
(assert (=> Step3_1
    (= |neverFall.balanceOf(pair)4|
       (+ |neverFall.balanceOf(pair)3| (* amt4 1.0)))))
(assert (=> LB36 (>= usdtAmount3 0.0)))
(assert (=> UB36 (<= usdtAmount3 340282366920938463463374607431768211455.0)))
(assert (=> Step3_2
    (= |usdt.balanceOf(pair)4| (- |usdt.balanceOf(pair)3| (* usdtAmount3 1.0)))))
(assert (=> Step3_3
    (= |usdt.balanceOf(attacker)4|
       (+ |usdt.balanceOf(attacker)3| (* usdtAmount3 1.0)))))
(assert (=> Step3_4 (< amt4 |neverFall.balanceOf(pair)3|)))
(assert (=> Step3_5 (< amt4 |neverFall.balanceOf(attacker)2|)))
(assert (=> Step3_6
    (= usdtAmount3
       (/ (* amt4 |usdt.balanceOf(pair)3| (/ 4.0 5.0))
          |neverFall.balanceOf(pair)3|))))
(assert (=> Step4_0
    (= |usdt.balanceOf(attacker)5| (- |usdt.balanceOf(attacker)4| (* amt5 1.0)))))
(assert (=> Step4_1
    (= |usdt.balanceOf(owner)5| (+ |usdt.balanceOf(owner)1| (* amt5 1.0)))))
(assert (=> Step4_2 (>= amt5 (/ (* amt0 1003.0) 1000.0))))
(assert (=> AttackGoal (>= |usdt.balanceOf(attacker)5| 1.0)))