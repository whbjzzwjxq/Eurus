(declare-fun amt0 () Real)
(declare-fun LB1 () Bool)
(declare-fun UB1 () Bool)
(declare-fun amt1 () Real)
(declare-fun LB2 () Bool)
(declare-fun UB2 () Bool)
(declare-fun amt2 () Real)
(declare-fun LB3 () Bool)
(declare-fun UB3 () Bool)
(declare-fun amt3 () Real)
(declare-fun LB4 () Bool)
(declare-fun UB4 () Bool)
(declare-fun amt4 () Real)
(declare-fun LB5 () Bool)
(declare-fun UB5 () Bool)
(declare-fun amt5 () Real)
(declare-fun LB6 () Bool)
(declare-fun UB6 () Bool)
(declare-fun |disc.balanceOf(attacker)1| () Real)
(declare-fun LB14 () Bool)
(declare-fun UB14 () Bool)
(declare-fun |disc.balanceOf(owner)1| () Real)
(declare-fun LB15 () Bool)
(declare-fun UB15 () Bool)
(declare-fun |disc.balanceOf(pair)2| () Real)
(declare-fun LB16 () Bool)
(declare-fun UB16 () Bool)
(declare-fun |usdt.balanceOf(attacker)2| () Real)
(declare-fun LB17 () Bool)
(declare-fun UB17 () Bool)
(declare-fun |disc.balanceOf(attacker)2| () Real)
(declare-fun LB18 () Bool)
(declare-fun UB18 () Bool)
(declare-fun |usdt.balanceOf(pair)2| () Real)
(declare-fun LB19 () Bool)
(declare-fun UB19 () Bool)
(declare-fun |disc.balanceOf(ethpledge)3| () Real)
(declare-fun LB20 () Bool)
(declare-fun UB20 () Bool)
(declare-fun |usdt.balanceOf(ethpledge)3| () Real)
(declare-fun LB21 () Bool)
(declare-fun UB21 () Bool)
(declare-fun |usdt.balanceOf(attacker)3| () Real)
(declare-fun LB22 () Bool)
(declare-fun UB22 () Bool)
(declare-fun |disc.balanceOf(attacker)3| () Real)
(declare-fun LB23 () Bool)
(declare-fun UB23 () Bool)
(declare-fun |disc.balanceOf(attacker)4| () Real)
(declare-fun LB24 () Bool)
(declare-fun UB24 () Bool)
(declare-fun |disc.balanceOf(owner)4| () Real)
(declare-fun LB25 () Bool)
(declare-fun UB25 () Bool)
(declare-fun Step0_0 () Bool)
(declare-fun Step0_1 () Bool)
(declare-fun Step1_0 () Bool)
(declare-fun Step1_1 () Bool)
(declare-fun Step1_2 () Bool)
(declare-fun Step1_3 () Bool)
(declare-fun amtOutMax1 () Real)
(declare-fun LB26 () Bool)
(declare-fun UB26 () Bool)
(declare-fun Step1_4 () Bool)
(declare-fun amountInWithFee1 () Real)
(declare-fun LB27 () Bool)
(declare-fun UB27 () Bool)
(declare-fun Step1_5 () Bool)
(declare-fun numeratorSuf1 () Real)
(declare-fun LB28 () Bool)
(declare-fun UB28 () Bool)
(declare-fun Step1_6 () Bool)
(declare-fun denominator1 () Real)
(declare-fun LB29 () Bool)
(declare-fun UB29 () Bool)
(declare-fun Step1_7 () Bool)
(declare-fun Step1_8 () Bool)
(declare-fun Step2_0 () Bool)
(declare-fun Step2_1 () Bool)
(declare-fun Step2_2 () Bool)
(declare-fun Step2_3 () Bool)
(declare-fun Step2_4 () Bool)
(declare-fun curTAmount222 () Real)
(declare-fun LB30 () Bool)
(declare-fun UB30 () Bool)
(declare-fun Step2_5 () Bool)
(declare-fun Step2_6 () Bool)
(declare-fun Step3_0 () Bool)
(declare-fun Step3_1 () Bool)
(declare-fun Step3_2 () Bool)
(declare-fun AttackGoal () Bool)
(assert (=> LB1 (>= amt0 0.0)))
(assert (=> UB1 (<= amt0 340282366920938463463374607431768211455.0)))
(assert (=> LB2 (>= amt1 0.0)))
(assert (=> UB2 (<= amt1 340282366920938463463374607431768211455.0)))
(assert (=> LB3 (>= amt2 0.0)))
(assert (=> UB3 (<= amt2 340282366920938463463374607431768211455.0)))
(assert (=> LB4 (>= amt3 0.0)))
(assert (=> UB4 (<= amt3 340282366920938463463374607431768211455.0)))
(assert (=> LB5 (>= amt4 0.0)))
(assert (=> UB5 (<= amt4 340282366920938463463374607431768211455.0)))
(assert (=> LB6 (>= amt5 0.0)))
(assert (=> UB6 (<= amt5 340282366920938463463374607431768211455.0)))
(assert (=> LB14 (>= |disc.balanceOf(attacker)1| 0.0)))
(assert (=> UB14
    (<= |disc.balanceOf(attacker)1| 340282366920938463463374607431768211455.0)))
(assert (=> LB15 (>= |disc.balanceOf(owner)1| 0.0)))
(assert (=> UB15
    (<= |disc.balanceOf(owner)1| 340282366920938463463374607431768211455.0)))
(assert (=> LB16 (>= |disc.balanceOf(pair)2| 0.0)))
(assert (=> UB16 (<= |disc.balanceOf(pair)2| 340282366920938463463374607431768211455.0)))
(assert (=> LB17 (>= |usdt.balanceOf(attacker)2| 0.0)))
(assert (=> UB17
    (<= |usdt.balanceOf(attacker)2| 340282366920938463463374607431768211455.0)))
(assert (=> LB18 (>= |disc.balanceOf(attacker)2| 0.0)))
(assert (=> UB18
    (<= |disc.balanceOf(attacker)2| 340282366920938463463374607431768211455.0)))
(assert (=> LB19 (>= |usdt.balanceOf(pair)2| 0.0)))
(assert (=> UB19 (<= |usdt.balanceOf(pair)2| 340282366920938463463374607431768211455.0)))
(assert (=> LB20 (>= |disc.balanceOf(ethpledge)3| 0.0)))
(assert (=> UB20
    (<= |disc.balanceOf(ethpledge)3| 340282366920938463463374607431768211455.0)))
(assert (=> LB21 (>= |usdt.balanceOf(ethpledge)3| 0.0)))
(assert (=> UB21
    (<= |usdt.balanceOf(ethpledge)3| 340282366920938463463374607431768211455.0)))
(assert (=> LB22 (>= |usdt.balanceOf(attacker)3| 0.0)))
(assert (=> UB22
    (<= |usdt.balanceOf(attacker)3| 340282366920938463463374607431768211455.0)))
(assert (=> LB23 (>= |disc.balanceOf(attacker)3| 0.0)))
(assert (=> UB23
    (<= |disc.balanceOf(attacker)3| 340282366920938463463374607431768211455.0)))
(assert (=> LB24 (>= |disc.balanceOf(attacker)4| 0.0)))
(assert (=> UB24
    (<= |disc.balanceOf(attacker)4| 340282366920938463463374607431768211455.0)))
(assert (=> LB25 (>= |disc.balanceOf(owner)4| 0.0)))
(assert (=> UB25
    (<= |disc.balanceOf(owner)4| 340282366920938463463374607431768211455.0)))
(assert (=> Step0_0
    (= |disc.balanceOf(owner)1|
       (- (/ 1836513014163421.0 62500000.0) (* amt0 1.0)))))
(assert (=> Step0_1 (= |disc.balanceOf(attacker)1| (+ 0.0 (* amt0 1.0)))))
(assert (=> Step1_0
    (= |disc.balanceOf(attacker)2| (- |disc.balanceOf(attacker)1| (* amt1 1.0)))))
(assert (=> Step1_1
    (= |disc.balanceOf(pair)2|
       (+ (/ 6073882956283149.0 500000000000.0) (* amt1 1.0)))))
(assert (=> Step1_2
    (= |usdt.balanceOf(pair)2|
       (- (/ 396231085713293.0 20000000000.0) (* amt2 1.0)))))
(assert (=> Step1_3 (= |usdt.balanceOf(attacker)2| (+ 4.0 (* amt2 1.0)))))
(assert (=> LB26 (>= amtOutMax1 0.0)))
(assert (=> UB26 (<= amtOutMax1 340282366920938463463374607431768211455.0)))
(assert (=> Step1_4 (< amt2 (* amtOutMax1 1.0))))
(assert (=> LB27 (>= amountInWithFee1 0.0)))
(assert (=> UB27 (<= amountInWithFee1 340282366920938463463374607431768211455.0)))
(assert (=> Step1_5 (= amountInWithFee1 (* amt1 997.0))))
(assert (=> LB28 (>= numeratorSuf1 0.0)))
(assert (=> UB28 (<= numeratorSuf1 340282366920938463463374607431768211455.0)))
(assert (=> Step1_6
    (= numeratorSuf1 (* amountInWithFee1 (/ 396231085713293.0 20000000000.0)))))
(assert (=> LB29 (>= denominator1 0.0)))
(assert (=> UB29 (<= denominator1 340282366920938463463374607431768211455.0)))
(assert (=> Step1_7
    (= denominator1 (+ (/ 12147765912566297.0 1000000000.0) amountInWithFee1))))
(assert (=> Step1_8 (= (* amtOutMax1 denominator1) numeratorSuf1)))
(assert (=> Step2_0
    (= |usdt.balanceOf(attacker)3| (- |usdt.balanceOf(attacker)2| (* amt3 1.0)))))
(assert (=> Step2_1 (= |usdt.balanceOf(ethpledge)3| (+ (/ 86796.0 5.0) (* amt3 1.0)))))
(assert (=> Step2_2
    (= |disc.balanceOf(ethpledge)3|
       (- (/ 377277504670437.0 625000000.0) (* amt4 1.0)))))
(assert (=> Step2_3
    (= |disc.balanceOf(attacker)3| (+ |disc.balanceOf(attacker)2| (* amt4 1.0)))))
(assert (=> Step2_4
    (= (* amt4 (/ 86796.0 5.0)) (* amt3 (/ 377277504670437.0 625000000.0)))))
(assert (=> LB30 (>= curTAmount222 0.0)))
(assert (=> UB30 (<= curTAmount222 340282366920938463463374607431768211455.0)))
(assert (=> Step2_5 (< curTAmount222 (/ 377277504670437.0 625000000.0))))
(assert (=> Step2_6
    (= curTAmount222
       (/ (* amt3 |disc.balanceOf(pair)2|) |usdt.balanceOf(pair)2|))))
(assert (=> Step3_0
    (= |disc.balanceOf(attacker)4| (- |disc.balanceOf(attacker)3| (* amt5 1.0)))))
(assert (=> Step3_1
    (= |disc.balanceOf(owner)4| (+ |disc.balanceOf(owner)1| (* amt5 1.0)))))
(assert (=> Step3_2 (>= amt5 (/ (* amt0 1003.0) 1000.0))))
(assert (=> AttackGoal (>= |usdt.balanceOf(attacker)3| 5.0)))

(assert (= LB1  true))
(assert (= UB1  true))
(assert (= LB2  true))
(assert (= UB2  true))
(assert (= LB3  true))
(assert (= UB3  true))
(assert (= LB4  true))
(assert (= UB4  true))
(assert (= LB5  true))
(assert (= UB5  true))
(assert (= LB6  true))
(assert (= UB6  true))
(assert (= LB14  true))
(assert (= UB14 true))
(assert (= LB15  true))
(assert (= UB15 true))
(assert (= LB16  true))
(assert (= UB16  true))
(assert (= LB17  true))
(assert (= UB17 true))
(assert (= LB18  true))
(assert (= UB18 true))
(assert (= LB19  true))
(assert (= UB19  true))
(assert (= LB20  true))
(assert (= UB20 true))
(assert (= LB21  true))
(assert (= UB21 true))
(assert (= LB22  true))
(assert (= UB22 true))
(assert (= LB23  true))
(assert (= UB23 true))
(assert (= LB24  true))
(assert (= UB24 true))
(assert (= LB25  true))
(assert (= UB25 true))
(assert (= Step0_0 true))
(assert (= Step0_1  true))
(assert (= Step1_0 true))
(assert (= Step1_1 true))
(assert (= Step1_2 true))
(assert (= Step1_3  true))
(assert (= LB26  true))
(assert (= UB26  true))
(assert (= Step1_4  true))
(assert (= LB27  true))
(assert (= UB27  true))
(assert (= Step1_5  true))
(assert (= LB28  true))
(assert (= UB28  true))
(assert (= Step1_6 true))
(assert (= LB29  true))
(assert (= UB29  true))
(assert (= Step1_7 true))
(assert (= Step1_8  true))
(assert (= Step2_0 true))
(assert (= Step2_1  true))
(assert (= Step2_2 true))
(assert (= Step2_3 true))
(assert (= Step2_4 true))
(assert (= LB30  true))
(assert (= UB30  true))
(assert (= Step2_5  true))
(assert (= Step2_6 true))
(assert (= Step3_0 true))
(assert (= Step3_1 true))
(assert (= Step3_2  true))
(assert (= AttackGoal  true))

(check-sat)
(get-model)